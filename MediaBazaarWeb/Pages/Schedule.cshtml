    @page
    @using BusinessLogic.Classes
    @model MediaBazaarWeb.Pages.ScheduleModel
    @{
        ViewData["Title"] = "Schedule Page";
    }

    <div class="container">
        <div class="btn-group" role="group" aria-label="View Options">
            <a class="btn btn-primary" asp-page="/Schedule" asp-route-view="two-week">Two Week View</a>
            <a class="btn btn-primary" asp-page="/Schedule" asp-route-view="one-week">One Week View</a>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">Day</th>
                    <th scope="col">Monday</th>
                    <th scope="col">Tuesday</th>
                    <th scope="col">Wednesday</th>
                    <th scope="col">Thursday</th>
                    <th scope="col">Friday</th>
                    <th scope="col">Saturday</th>
                    <th scope="col">Sunday</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var dayStatus in Model.TwoWeeksSchedule)
                {
                    <tr>
                        <th scope="row">@dayStatus.Date.ToString("dd MMM")</th>
                        @for (int i = 0; i < 7; i++)
                        {
                            <td>
                                @foreach (var shift in dayStatus.Shifts.Where(s => ((int)s.Date.DayOfWeek + 6) % 7 == i))
                                {
                                    <div style="background-color: @(GetShiftColor(shift, dayStatus.Date))">@ReturnShiftTypeByHours(shift)</div>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        <div class="form-group">
        <a class="button" asp-page="/Availabilities">Change Availabilities</a>
        </div>
    </div>

    @functions {
        // Function to get the color based on shift status
        private string GetShiftColor(Shift shift, DateTime currentDate)
        {
            if (shift.Date.Date == currentDate.Date)
            {
                return "green"; // Shift has already occurred
            }
            else if (shift.Date.Date > currentDate.Date)
            {
                return "yellow"; // Shift is in the future
            }
            else
            {
                return "red"; // Employee missed the shift
            }
        }
    }

    @functions{

        private string ReturnShiftTypeByHours(Shift shift)
        {
            string str;
            if( shift.Type == BusinessLogic.Enums.ShiftType.Morning)
            {
                str = "Morning 08:00 - 15:00";
            }
            else if (shift.Type == BusinessLogic.Enums.ShiftType.Afternoon)
            {
                str = "Afternoon 15:00 - 22:00";
            }
            else
            {
                str = "Night 22:00 - 05:00";
            }
            return str;
        }
    }